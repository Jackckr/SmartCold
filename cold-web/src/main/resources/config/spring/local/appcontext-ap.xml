<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!--自己实现的handler -->
	<bean id="serverHandler" class="com.smartcold.manage.cold.api.SocketHandler" />
	<!-- executorFilter多线程处理 -->
	<bean id="executorFilter" class="org.apache.mina.filter.executor.ExecutorFilter">
			<constructor-arg index="0" value="3000" /> 
			<constructor-arg index="1" value="5000" /> 
	</bean>

	<!-- 监听端口 -->
	<bean id="defaultLocalAddress" class="java.net.InetSocketAddress"> 
<!--  		<constructor-arg index="0" value="139.224.16.238" />   -->
 		<constructor-arg index="0" value="2196" /> 
	</bean> 
	
	<bean id="mdcInjectionFilter" class="org.apache.mina.filter.logging.MdcInjectionFilter"> 
 		<constructor-arg value="remoteAddress" /> 
	</bean> 

	<!--编解码 -->
	<bean id="codecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
		<constructor-arg>
			<!--构造函数的参数传入自己实现的对象 -->
		<!--	<bean class="com.smartcold.manage.cold.util.socket.ByteArrayCodecFactory"> -->
	 	<bean class="com.smartcold.manage.cold.util.socket.CodeFactory"> 
			<property name="bufferLength" value="1024"></property> 
			<property name="decoderMaxLineLength" value="10240"></property> 
			</bean>
		</constructor-arg>
	</bean>
	<!-- 日志级别 -->
		<!-- 	<bean id="minaloglv" -->
		<!-- 		class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean"> -->
		<!-- 		<property name="staticField" value="org.apache.mina.filter.logging.LogLevel.WARN" /> -->
		<!-- 	</bean> -->
			<!--日志 -->
		<!-- 	<bean id="loggerFilter" class="org.apache.mina.filter.logging.LoggingFilter"> -->
				<!-- <constructor-arg index="0" value="DEBUG"></constructor-arg> -->
		<!-- 		<property name="messageReceivedLogLevel" ref="minaloglv"></property> -->
		<!-- 		<property name="exceptionCaughtLogLevel" ref="minaloglv"></property> -->
		<!-- 	</bean> -->

	<bean id="filterChainBuilder" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
			<property name="filters">
				<map>
					<!--mina自带的线程池filter -->
					<entry key="executor" value-ref="executorFilter" />
					<!--自己实现的编解码器filter -->
 					<entry key="codecFilter" value-ref="codecFilter" /> 
					<!-- 拦截端口 -->
			     	<entry key="mdcInjectionFilter" value-ref="mdcInjectionFilter" /> 
					<!--日志的filter -->
	                 <!-- <entry key="loggingFilter" value-ref="loggerFilter" /> -->
					<!--心跳filter -->
					<!-- <entry key="keepAliveFilter" value-ref="keepAliveFilter" /> -->
				</map>
			</property>
		</bean>


	<!-- session config 通过工厂方法注入 -->
	<bean id="sessionConfig" factory-bean="ioAcceptor" factory-method="getSessionConfig"> 
		<property name="bothIdleTime" value="1800" />
		<property name="readerIdleTime" value="1800" /> 
		<property name="minReadBufferSize" value="512" />  
		<property name="maxReadBufferSize" value="10240" /> 
	</bean>  
	
 	<bean id="ioAcceptor" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"  destroy-method="unbind"> 
         <!-- 设置线程数 -->
  		<constructor-arg index="0" value="500"></constructor-arg>  
         <!--端口号 -->
 		<property name="defaultLocalAddress" ref="defaultLocalAddress" />   
        <!--绑定自己实现的handler -->
 		<property name="handler" ref="serverHandler" />  
         <!--声明过滤器的集合 -->
 		<property name="filterChainBuilder" ref="filterChainBuilder" />  
 		<property name="reuseAddress" value="true" /> 
 	</bean>  

    <!-- 委托器管理服务 -->
    <bean id="beanDefineConfigue" class="com.smartcold.manage.cold.service.impl.SocketServer" init-method="initServer"  > </bean> 


	<!--心跳检测filter 用于定时推送消息。。。。 -->
	<!-- <bean id="keepAliveFilter" class="org.apache.mina.filter.keepalive.KeepAliveFilter"> -->
	<!--构造函数的第一个参数传入自己实现的工厂 -->
	<!-- <constructor-arg > <bean class="com.smartcold.manage.cold.socket.services.MyKeepAliveMessageFactory"></bean> 
		</constructor-arg> -->
	<!--第二个参数需要的是IdleStatus对象，value值设置为读写空闲 -->
	<!-- <constructor-arg type = "org.apache.mina.core.session.IdleStatus" value="BOTH_IDLE" 
		></constructor-arg> -->
	<!-- <property name="requestInterval" value="5" /> 心跳频率，不设置则默认60s -->
	<!-- <property name="requestTimeout" value="30" /> 心跳超时时间，不设置则默认30s -->
	<!-- <property name="forwardEvent" value="true" /> 不设置默认false -->
	<!-- </bean> -->


</beans>