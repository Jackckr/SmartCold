<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.smartcold.manage.cold.dao.newdb.StorageDataCollectionMapper">

		<resultMap id="dataResultMap" type="StorageKeyValue">
		  <id property="id" column="id" />
		  <result property="key" column="key"/>
		  <result property="value" column="value"/>
		  <result property="addtime" column="time"/>
		</resultMap>

	<insert id="batchInsert" parameterType="StorageDataCollectionEntity">
		INSERT INTO `storageDataCollection`
		(
		`deviceid`,
		`apid`,
		`key`,
		`value`,
		`time`,
		`addtime`
		)
		VALUES
		<foreach collection="list" item="model" separator=","> 
        (           
            #{model.deviceid}, 
            #{model.apid}, 
            #{model.key}, 
            #{model.value}, 
            #{model.time}, 
            now()     
        )
    </foreach>
	</insert>
	
	<select id="findLastNPoint" parameterType="map" resultMap="dataResultMap">
	    SELECT * FROM storagedatacollection
	    WHERE 1 =1
	    <if test="limit==1">
		  and  DATE_ADD( `addtime` , INTERVAL 5 MINUTE )
		</if>
		<if test="limit>400">
	    	 and  DATE_ADD( `addtime` , INTERVAL 5 HOUR )
		</if>
	    <if test="apid != null">
		    AND `apid` = #{apid} 
	    </if>
	    <if test="deviceid != null">
		    AND `deviceid` = #{deviceid} 
	    </if>
	    <if test="key != null">
		    AND `key` = #{key} 
	    </if> 
	    ORDER BY time DESC LIMIT #{limit} 
	</select>
	
	<select id="findByTime" parameterType="map" resultMap="dataResultMap">
	    SELECT * FROM storagedatacollection
	    WHERE 1 =1
	    <if test="apid != null">
		    AND `apid` = #{apid} 
	    </if>
	    <if test="deviceid != null">
		    AND `deviceid` = #{deviceid} 
	    </if>
	    <if test="key != null">
		    AND `key` = #{key} 
	    </if>
	    AND time > #{startTime} AND time &lt; #{endTime}  order by `time` ${orderBy}   
	</select>
	
	<select id="findByTimeFormat" parameterType="map" resultMap="dataResultMap">
	    SELECT `value`,`time` FROM storagedatacollection
	    WHERE 1 =1
	    <if test="apid != null">
		    AND `apid` = #{apid} 
	    </if>
	    <if test="deviceid != null">
		    AND `deviceid` = #{deviceid} 
	    </if>
	    <if test="key != null">
		    AND `key` = #{key} 
	    </if>
	    AND time >= #{startTime} AND time &lt;= #{endTime} ORDER BY  `time` ${orderBy} 
	</select>
<!-- 	<select id="findByTimeFormat1" parameterType="map" resultMap="dataResultMap"> -->
<!-- 	    SELECT avg(`value`) value,DATE_FORMAT(`time`, #{dateFormat})  as grouptime ,time FROM storagedatacollection   -->
<!-- 	    WHERE 1 =1 -->
<!-- 	    <if test="apid != null"> -->
<!-- 		    AND `apid` = #{apid}  -->
<!-- 	    </if> -->
<!-- 	    <if test="deviceid != null"> -->
<!-- 		    AND `deviceid` = #{deviceid}  -->
<!-- 	    </if> -->
<!-- 	    <if test="key != null"> -->
<!-- 		    AND `key` = #{key}  -->
<!-- 	    </if> -->
<!-- 	    AND time > #{startTime} AND time &lt; #{endTime}  GROUP BY grouptime  ORDER BY  grouptime ${orderBy}  -->
<!-- 	</select> -->
	
	<resultMap id="ResultOfInteger" type="java.lang.Integer">  
     <result column="cou" property="cou" jdbcType="INTEGER" />  
    </resultMap>
	<select id="findCounSizeByTime" parameterType="map" resultMap="ResultOfInteger"> 
	    SELECT count(*) cou FROM storagedatacollection 
	    WHERE 1 =1 
	    <if test="apid != null"> 
		    AND `apid` = #{apid} 
	    </if> 
	    <if test="deviceid != null"> 
		    AND `deviceid` = #{deviceid}  
	    </if> 
	    <if test="key != null"> 
		    AND `key` = #{key}  
	    </if> 
	    AND time > #{startTime} AND time &lt; #{endTime}; 
	</select> 
</mapper>