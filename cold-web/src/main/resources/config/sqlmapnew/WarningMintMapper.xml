<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.smartcold.manage.cold.dao.newdb.WarningMintMapper">


	<insert id="addWarningMintEntity" parameterType="com.smartcold.manage.cold.entity.newdb.WarningMintEntity">
		INSERT INTO `warningmint`(`refid `,`rdcid `,`type `,`oid
		`,`level
		`,`status `,`mapper `,`warningmsg `,`analysismsg `,`desc
		`,`addtime
		`)values(#{refid },#{rdcid },#{type },#{oid },#{level
		},#{status
		},#{mapper },#{warningmsg },#{analysismsg },#{desc },now());
	</insert>
	
	<delete id="delMaintAlarmByIds" parameterType="map">
	  DELETE FROM `warningmint` where `id` in(#{ids});
	</delete>
	<update id="upMaintAlarmstatuByIds">
	  update `warningmint` set `status`=#{status}
	 <if test="userId!=null and userId!=''"> ,`userId`=#{userId}</if>
	 <if test="desc!=null and desc!=''">,`desc`=#{desc} </if> 
	  where  `id` in(${ids});
	</update>
	
	<update id="upWarningMintEntity" parameterType="com.smartcold.manage.cold.entity.newdb.WarningMintEntity">
	   update `warningmint`
        <set >
			<if test="refid       !=0    ">          refid                       =#{     refid           }  ,</if>      
			<if test="rdcid       !=0    ">          rdcid                       =#{     rdcid           }  ,</if>      
			<if test="type        !=0    ">          type                        =#{     type            }  ,</if>      
			<if test="oid         !=0    ">          oid                         =#{     oid             }  ,</if>      
			<if test="level       !=0    ">          level                       =#{     level           }  ,</if>      
			<if test="status      !=0    ">          status                      =#{     status          }  ,</if>      
			<if test="mapper      !=null and mapper      !=''   ">          mapper                      =#{     mapper          }  ,</if>      
			<if test="warningmsg  !=null and warningmsg  !=''   ">          warningmsg                  =#{     warningmsg      }  ,</if>      
			<if test="analysismsg !=null and analysismsg !=''   ">          analysismsg                 =#{     analysismsg     }  ,</if>      
			<if test="desc        !=null and desc        !=''   ">          desc                        =#{     desc            }  ,</if>      
			<if test="addtime     !=null and addtime     !=''   ">          addtime                     =#{     addtime         } </if>      
        </set>
        where id = #{id};
	
	</update>

	<select id="getWarningMintById" parameterType="map" resultType="com.smartcold.manage.cold.entity.newdb.WarningMintEntity">
			select
			`id` ,
			`userId` ,
			`rdcid` ,
			`mapper` ,
			`warningtype` ,
			`warningmsg` ,
			`analysismsg` , `status`,
			`desc` ,
			`addtime`
			from `warningmint` where `id` in(${ids})	ORDER BY `id` desc ;
	</select>
	
	<select id="getMaintAlarmByFilter" parameterType="map"
		resultType="com.smartcold.manage.cold.entity.newdb.WarningMintEntity">
	select
	`id` ,
	`rdcid` ,
	`mapper` ,
	`warningmsg` ,
	`analysismsg` , `status`,
	`desc` ,
	`addtime`
	from `warningmint` where `rdcid`=#{rdcid}
		<if test="status!=null"> and `status` in( ${status}) </if>
		<if test="level!=null"> and `level`=#{level} </if>
		<if test="keyword!=null"> and ( `warningmsg`="%"#{keyword}"%" or
			`desc`="%"#{keyword}"%" ) </if>
		ORDER BY `id` desc LIMIT 20;
	</select>
	
	<select id="getWarningType" parameterType="map" resultType="map">
	  select * from warningtype where pid=#{pid};
	</select>
	<insert id="addMaintconFirma" parameterType="map" >
	  INSERT INTO `maintconfirma` (`rdcId`,`maintid`,`starttime` ,`endtime` ,`phenomena` ,`maintresult`,`cost` ,`note` ,`serverType` )  values(#{rdcId },#{maintid},#{starttime},#{endtime},#{phenomena},#{maintresult},#{cost},#{note},#{serverType});
	</insert>
	
	<insert id="addMaintorder"  parameterType="com.smartcold.manage.cold.entity.newdb.MaintorderEntity">
		INSERT INTO `maintorder`(`rdcid`,`maintid`,`wpid`,`wid`,`number`,`unit`,`price`,`addtime`)VALUES
		<foreach collection="list" item="model" separator=","> 
          (   #{model.rdcId},#{model.maintid},#{model.wpid},#{model.wid},#{model.number},#{model.unit},#{model.price} ,now() )   
        </foreach>
	</insert>
	

	
	
	
</mapper>