<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"  
	   xmlns:redisson="http://redisson.org/scheam/redisson"
       xsi:schemaLocation="
       http://redisson.org/scheam/redisson http://redisson.org/scheam/redisson/redisson.xsd
       http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	   http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     ">
     <!--配置数据源属性文件引入Server.properties -->
    <context:property-placeholder location="classpath:config/properties/server.properties"	ignore-unresolvable="true" />


    
 <!--  数据源1：门店配置   ============================================================================我是分隔线========================================================================================================================= -->
	<bean id="storeinfoSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url_store}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="stat" />
	</bean>
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
       <property name="basePackage" value="com.smartcold.manage.cold.dao.olddb" />    
       <property name="sqlSessionFactoryBeanName" value="storesetdbSqlSessionFactory"/>
    </bean> 
   
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" name="storesetdbSqlSessionFactory">  
       <property name="dataSource" ref="storeinfoSource" />  
       <property name="mapperLocations" value="classpath*:config/sqlmap/*.xml"/>  
       <property name="typeAliasesPackage" value="com.smartcold.manage.cold.entity.olddb" />  
    </bean>  
    <!--  2.influxdv数据源配置   ============================================================================我是分隔线========================================================================================================================= -->
	<bean id="influxDBProperties" class="com.smartcold.manage.cold.entity.newdb.InfluxDBProperties" >
          <property name="url" value="${infx.url_store}"></property>
          <property name="username" value="${infx.username}"></property>
          <property name="password" value="${infx.password}"></property>
          <property name="database" value="${infx.database}"></property>
          <property name="retentionPolicy" value="${infx.retentionPolicy}"></property>
	</bean>
	
<!--     ============================================================================我是分隔线========================================================================================================================= -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="300"/>
        <property name="maxTotal" value="600"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
   <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.hostName}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.password}"/>
        <property name="database" value="6"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>
	<cache:annotation-driven/> 
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	   <property name="connectionFactory" ref="jedisConnectionFactory"></property>
	   <property name="keySerializer">
	      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
	   </property>
	   <property name="valueSerializer">
	      <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
	   </property>
	   <property name="enableTransactionSupport" value="false"></property>
	</bean>
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
	   <constructor-arg index="0" ref="redisTemplate"></constructor-arg>
	   <property name="defaultExpiration" value="21600"></property>
	   <property name="expires">
			<map>
				<entry key="user/token/*" value="20"></entry>
				<entry key="user:token:*" value="20"></entry>
			</map>
		</property>
	</bean>
	
	<bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
            <property name="maxInactiveIntervalInSeconds" value="600"/>
    </bean>
</beans>
