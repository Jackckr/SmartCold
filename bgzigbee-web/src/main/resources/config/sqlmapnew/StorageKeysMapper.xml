<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartcold.bgzigbee.manage.sc360.dao.StorageKeysMapper">
	<update id="update">
		UPDATE `storagekeys`
		<set>
			<if test="desc!=null and desc !=''">`desc`=#{desc},</if>
			<if test="key!=null and key !=''">`key`=#{key},</if>
			<if test="issis!=null and issis !=''">`issis`=#{issis},</if>
			<if test="type!=null and type !=''">`type`=#{type},</if>
			<if test="unit!=null and unit !=''">`unit`=#{unit},</if>
	    </set>
		WHERE `id`=#{id}
	</update>
	<select id="findAll" resultType="StorageKeysEntity" parameterType="String">
		select * from storagekeys  ORDER BY type asc;
	</select>
	<select id="findbyFilter" resultType="com.smartcold.bgzigbee.manage.sc360.entity.StorageKeysEntity" parameterType="map">
		select * from storagekeys  where 1=1 <if test="keys!=null and keys!=''"> and `key` in( ${keys}) </if>   <if test="types!=null and types!=''"> and type in(${types}) </if>  ;
	</select>
	<select id="findByMap" parameterType="map" resultType="com.smartcold.bgzigbee.manage.sc360.entity.StorageKeysEntity">
		select * from storagekeys
		<where>
			<if test="words!=null and words != ''">(`desc` LIKE '%${words}%' or `key` like '%${words}%')</if>
			<if test="issis!=null and issis != ''">and `issis`=#{issis}</if>
			<if test="type!=null and type != ''">and `type`=#{type}</if>
		</where>
		ORDER BY type asc;
	</select>
	<select id="findByKey" resultType="com.smartcold.bgzigbee.manage.sc360.entity.StorageKeysEntity">
		SELECT * FROM `storagekeys` WHERE `key`=#{key}
	</select>
	<select id="findById" resultType="com.smartcold.bgzigbee.manage.sc360.entity.StorageKeysEntity">
		SELECT * FROM `storagekeys` WHERE `id`=#{id}
	</select>

	<insert id="save" parameterType="com.smartcold.bgzigbee.manage.sc360.entity.StorageKeysEntity" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO storagekeys
			(`type`,`key`, `desc`, `unit` ,`issis`) VALUES
			(#{type},#{key}, #{desc}, #{unit},#{issis})
	</insert>

	<delete id="deleteById">
		DELETE FROM storagekeys WHERE id=#{id}
	</delete>
</mapper>