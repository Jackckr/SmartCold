<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.smartcold.zigbee.manage.dao.UserMapper">


    <insert id="insertUser" parameterType="UserEntity">
        INSERT INTO `user`(
		`username`,
		`password`,
		`type`,
		`telephone`,
		`email`,
		`realname`,
		`addTime`
		)
		VALUE 
		(
		#{username},
		#{password},
		#{type},
		#{telephone},
		#{email},
		#{realname},
		now()
		)
    </insert>
    
      <update id="updateUser" parameterType="com.smartcold.zigbee.manage.entity.UserEntity" >
        update user
        <set>
	         <if test="role       !=null">role       =#{role      },</if>
	         <if test="sex        !=null">sex        =#{sex       },</if>
	         <if test="addressid  !=null">addressid  =#{addressid },</if>
	         <if test="hometownid !=null">hometownid =#{hometownid},</if>
	         <if test="username   !=null and username !=''">username   =#{username  },</if>
	         <if test="password   !=null and password !=''">password   =#{password  },</if>
	         <if test="telephone  !=null and telephone!=''">telephone  =#{telephone },</if>
	         <if test="realname   !=null and realname !=''"> realname  =#{realname  },</if>
	         <if test="nickname   !=null and nickname !=''"> nickname  =#{nickname  },</if> 
	         <if test="email      !=null and email    !=''">   email   =#{email     },</if>
<!-- 	         realname  =#{realname  }, nickname  =#{nickname  }, email   =#{email     }, -->
	         <if test="avatar     !=null and avatar   !=''">   avatar  =#{avatar    },</if>
	         <if test="addTime    !=null and addTime  !=''">addTime    =#{addTime   },</if>
	         <if test="updateTime !=null and updateTime!=''">updateTime=#{updateTime}</if>
        </set>
        where id = ${id}
    </update>
    <update id="upPwdByTelephone" parameterType="com.smartcold.zigbee.manage.entity.UserEntity" >
        update user set password   =#{password} where  username=#{username} ;
    </update>
    <select id="existenceUserName" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM user u  WHERE u.`username` = #{username};
	</select>
    <select id="findUser" parameterType="map" resultType="UserEntity">
		SELECT u.*,rl.roleid, p1.ProvinceName address,p2.ProvinceName hometown FROM user u LEFT JOIN roleuser rl on u.id=rl.userid  LEFT JOIN provincelist p1 on p1.ProvinceID=u.addressid LEFT JOIN provincelist p2 on p2.ProvinceID=u.hometownid WHERE u.`username` = #{username} AND u.`password` = #{password} LIMIT 1;
	</select>
	<select id="findUserByName" parameterType="map" resultType="UserEntity">
		SELECT u.*,rl.roleid,p1.ProvinceName address,p2.ProvinceName hometown FROM user u LEFT JOIN roleuser rl on u.id=rl.userid  LEFT JOIN provincelist p1 on p1.ProvinceID=u.addressid LEFT JOIN provincelist p2 on p2.ProvinceID=u.hometownid WHERE u.`username` = #{username} LIMIT 1;
	</select>
    <select id="findUserById" parameterType="map" resultType="UserEntity">
		SELECT u.*,rl.roleid,p1.ProvinceName address,p2.ProvinceName hometown FROM user u LEFT JOIN roleuser rl on u.id=rl.userid  LEFT JOIN provincelist p1 on p1.ProvinceID=u.addressid LEFT JOIN provincelist p2 on p2.ProvinceID=u.hometownid  WHERE u.id = #{id}
	</select>

    <insert id="addmsg" parameterType="Map">
        INSERT INTO `appointment`(
		`userName`,
		`telephone`,
		`corporateName`,
		`note`
		)
		VALUE 
		(
		#{userName},
		#{telephone},
		#{corporateName},
		#{note})
    </insert>

	<update id="updateTypeById">
		UPDATE `user` SET `type`=#{type} where `id`=#{id};
	</update>
</mapper>